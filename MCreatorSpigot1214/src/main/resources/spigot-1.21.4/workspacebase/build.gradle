import java.nio.file.Path
import xyz.jpenilla.runpaper.task.RunServer

plugins {
    id 'eclipse'
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
}

group = 'org.cdc'
version = '1.0'
base.archivesName = 'target'

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.21.4-R0.1-SNAPSHOT")
}

abstract class RunMCreatorServer extends RunServer{
    RunMCreatorServer(){
        super()
    }
    @Override
    protected void preExec(Path workingDir) {
        super.preExec(workingDir)
        setArgs(List.of())
    }
}

var copy = tasks.register('copyPlugin', Copy) {
    dependsOn tasks.jar
    from 'build/libs/target-1.0.jar'
    into 'run/plugins'
}

var task = tasks.replace("runServer", RunMCreatorServer)
task.dependsOn(copy)

tasks {
    runServer {
        copy {
            from 'build/libs/target-1.0.jar'
            into 'run/plugins'
        }
        def mcreatorJvmOptions = System.getenv('MCREATOR_JVM_OPTIONS')
        if (mcreatorJvmOptions) {
            mcreatorJvmOptions.split("\\s+").findAll { it.trim() }.each { arg ->
                jvmArgument(arg)
            }
        }
        minecraftVersion("1.21.4")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    options.release.set(targetJavaVersion)
}

processResources {
}

apply from: 'mcreator.gradle'
